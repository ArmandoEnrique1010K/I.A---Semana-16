import cv2
import numpy as np


def contar_fichas_por_color(
    imagen, rango_color, threshold=1, area_min=10, area_max=1000
):
    # Crear una copia de la imagen para evitar modificar la original
    imagen_copia = imagen.copy()

    hsv = cv2.cvtColor(imagen_copia, cv2.COLOR_BGR2HSV)
    lower_color = np.array(rango_color[0])
    upper_color = np.array(rango_color[1])
    mascara = cv2.inRange(hsv, lower_color, upper_color)
    fichas_color = cv2.bitwise_and(imagen_copia, imagen_copia, mask=mascara)
    gray = cv2.cvtColor(fichas_color, cv2.COLOR_BGR2GRAY)
    _, thresh = cv2.threshold(gray, threshold, 255, cv2.THRESH_BINARY)
    contornos, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    num_fichas = len(contornos)

    # Crear una m치scara negra del mismo tama침o que la imagen original
    mascara_negra = np.zeros_like(imagen_copia, dtype=np.uint8)

    # Dibujar contornos en la m치scara negra
    cv2.drawContours(
        mascara_negra, contornos, -1, (255, 255, 255), thickness=cv2.FILLED
    )
    # Convertir la m치scara a escala de grises
    mascara_negra_gris = cv2.cvtColor(mascara_negra, cv2.COLOR_BGR2GRAY)

    # Poner a negro las partes de la imagen original que no cumplen con el color
    imagen_copia = cv2.bitwise_and(imagen_copia, imagen_copia, mask=mascara_negra_gris)

    return imagen_copia, num_fichas
